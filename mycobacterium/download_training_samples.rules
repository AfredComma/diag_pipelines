from snakemake.utils import report
import re

shell.prefix("set -euo pipefail;") 

include: "../assembly/assembly.rules"
configfile: "config.yaml"


specs = open(config["specimen"]).read().split("\n")
specs.pop()
sra=open(config["sras"]).read().split("\n")
sra.pop()
print(sra)

rule prepare_files:
    input:
        "samples.txt"
    output:
        expand("data/{sras}.info", sras=sra)
    shell:
        """
        while read p
        do
            spec=${{p%%,*}}
            sra=${{p##*,}}
            echo ${{spec}} > data/${{sra}}.info
        done < {input}
        """

rule get_sra:
    conda:
        "env/sra-tools.yaml"
    input:
        expand("data/{sras}.info", sras=sra)
    output:
        temp("reads/raw/{sample}_R1_001.fastq"),
        temp("reads/raw/{sample}_R2_001.fastq")
    params:
        txt = config["samples"]
    shell:
        """
        sra=$(grep {wildcards.sample} {params.txt} | cut -f 2 -d',')
        fastq-dump --split-files --outdir reads/raw/ ${{sra}}
        mv reads/${{sra}}_1.fastq reads/raw/{wildcards.sample}_R1_001.fastq 
        mv reads/${{sra}}_2.fastq reads/raw/{wildcards.sample}_R2_001.fastq 
        """
        


rule report:
    input:
        expand("{sample}/report.html", sample=specs)

    output:
        "report.html"

    run:
        report("""
        Report of the comparative genomics pipeline 
        """)
