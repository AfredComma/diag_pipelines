import os
import mysql.connector
from snakemake.utils import report

shell.prefix("set -euo pipefail;") 

cnx = mysql.connector.connect(option_files="/home/sacha/.my.cnf", option_groups="myco")
cnx.get_warnings = True
cursor = cnx.cursor()
cursor.execute("SELECT * FROM sras;")
samples={}
for sample, sra in cursor.fetchall():
    samples.setdefault(sample, []).append(sra)
cnx.commit()
cnx.close()

include: "assess_resistance.rules"

extension= {}
for i in samples.keys():
    extension[i] = ["R1.fastq", "R2.fastq"]

rule get_sra:
    conda:
        "env/sra-tools.yaml"
    output:
        temp("reads/raw/{sample}_R1.fastq"),
        temp("reads/raw/{sample}_R2.fastq")
    params:
        sra = lambda wildcards: samples[str(wildcards.sample)][0]
    shell:
        """
        fastq-dump --split-files --outdir reads/raw/ {params.sra}
        mv reads/raw/{params.sra}_1.fastq reads/raw/{wildcards.sample}_R1.fastq 
        mv reads/raw/{params.sra}_2.fastq reads/raw/{wildcards.sample}_R2.fastq 
        """

rule all:
    input:
        expand("strains/{sample}/logs/local_mysql.txt", sample=samples.keys())
    output:
        "logs/final.txt"
    shell:
        """
        echo "all good" > {output}
        """
