import csv
import re

include : "../assembly/assembly.rules"
include : "assess_resistance.rules"


rule copy_fastq_paired:
    input:
        lambda wildcards: expand("links/"+wildcards.sample+"_{ext}", ext=extension[wildcards.sample])
    output:
        temp("reads/raw/{sample}_R1.fastq"),
        temp("reads/raw/{sample}_R2.fastq")
    shell:
        """
        gzip -f -c -d {input[0]} > {output[0]}
        gzip -f -c -d {input[1]} > {output[1]}
        """
        
rule copy_fastq_single:
    input:
        lambda wildcards: "links/"+wildcards.sample+"."+extension[wildcards.sample][0]
    output:
        temp("reads/raw/{sample}_single.fastq")
    shell:
        """
        gzip -f -c -d {input[0]} > {output[0]}
        """
    
rule all:
    input:
        "mapping/snippy/{dataset}/core.aln"
    output:
        "logs/{dataset}_final.txt"
    shell:
        """
        echo "all good" > {output}
        """
