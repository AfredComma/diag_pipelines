rule raxml_on_alignment_to_ref:
    conda:
        "env/raxml.yaml"
    input:
        "alignments/{ref}.fa"
    output:
        "phylogeny/RAxML_bestTree.{ref}"
    log:
        "logs/phylogeny/RAxML_log.{ref}"
    shell:
        """
        if [ -f phylogeny/RAxML_*.{wildcards.ref} ]; then
             rm phylogeny/RAxML_*.{wildcards.ref}
        fi
        raxmlHPC -m GTRCAT -V -n {wildcards.ref} -s {input[0]} -w $(dirname $(readlink -f {output[0]})) -p 123 > {log} 
        """

rule raxml_bootstrap:
    conda:
        "env/raxml.yaml"
    input:
        "alignments/{ref}.fa"
    output:
        "phylogeny/RAxML_bootstrap.{ref}_boot"
    log:
        "logs/phylogeny/RAxML_log.{ref}_boot"
    shell:
        """
        if [ -f phylogeny/RAxML_*.{wildcards.ref}_boot ]; then
             rm phylogeny/RAxML_*.{wildcards.ref}_boot
        fi
        raxmlHPC -m GTRCAT -V -n {wildcards.ref}_boot -s {input[0]} -b 123 -w $(dirname $(readlink -f {output[0]})) -N 100 -p 123 > {log} 
        """

rule convert_phylogeny_to_image:
    conda:
        "env/newick-utils.yaml"
    input:
        "phylogeny/RAxML_bestTree.{ref}",
        "phylogeny/RAxML_bootstrap.{ref}_boot"
    output:
        "phylogeny/{ref}.svg"
    shell:
        """
        if [ -f sample_names.tsv ]; then
            nw_support {input[0]} {input[1]} | nw_reroot - Reference | nw_rename - sample_names.tsv | nw_display -s -b 'opacity:0' -w -1600 -I m -W 20 -v 15 - > {output[0]}
        else
            nw_support {input[0]} {input[1]} | nw_reroot - Reference | nw_display -s -b 'opacity:0' -w 800 -v 15 - > {output[0]}
        fi 
        """

        
