rule search_resistance_paired_reads_with_mykrobe:
    conda:
        pipeline_path + "envs/mykrobe.yaml"
    params:
        panel = mykrobe_panel,
        species = mykrobe_species[species],
    input:
        "samples/{sample}/reads/raw/{sample}_R1.fastq.gz",
        "samples/{sample}/reads/raw/{sample}_R2.fastq.gz",
    output:
        "samples/{sample}/resistance/mykrobe.json"
    log:
        logging_folder + "samples/{sample}/resistance/mykrobe.txt"
    shell:
        """
        mykrobe predict "{wildcards.sample}" "{params.species}" --seq {input} --min_variant_conf 10 --panel {params[panel]}  > {output[0]} 2> {log}
        """
        
rule search_resistance_single_reads_with_mykrobe:
    conda:
        pipeline_path + "envs/mykrobe.yaml"
    params:
        panel = mykrobe_panel,
        species = mykrobe_species[species]
    input:
        "samples/{sample}/reads/raw/{sample}_single.fastq.gz",
    output:
        "samples/{sample}/resistance/mykrobe.json"
    log:
        logging_folder + "samples/{sample}/resistance/mykrobe.txt"
    shell:
        """
        mykrobe predict "{wildcards.sample}" "{params.species}" --seq {input[0]} --min_variant_conf 10 --panel {params[panel]}  > {output[0]} 2> {log}
        """

rule generate_mykrobe_tsv_file_from_json_file:
    input:
        "samples/{sample}/resistance/mykrobe.json",
    output:
        "samples/{sample}/resistance/mykrobe.tsv"
    script:
        "scripts/mykrobe_json_to_tsv.py"

   
