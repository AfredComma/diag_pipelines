rule tblastn_virulence_protein:
    conda:
        "env/blast.yaml"
    input:
        "virulence/protein_fastas/log.txt",
        "strains/{sample}/annotation/{sample}.fsa"
    output:
        "strains/{sample}/virulence/results_tblastn.tsv",
        "strains/{sample}/virulence/results_tblastn.fasta",
        
    shell:
        """
        makeblastdb -dbtype prot -in {input[1]}
        echo "Virulence factor ID\tContig  ID\tPercentage identity\tQuery coverage\tLength of the alignment\tNumber of mismatches\tNumber of gaps\tStart of the alignment on the protein\tEnd of the alignment of the protein\tStart of the alignment on the contig\tEnd of the alignment on the contig\tE-value\tBitscore\tProtein sequence on the contig" > {output[0]}
        for i in $(ls $(dirname {input[0]})/*.fasta); do
            seq=""
            tblastn -query ${{i}} -db {input[1]} -outfmt "6 qseqid sseqid pident qcovs length mismatch gapopen qstart qend sstart send evalue bitscore sseq" | awk '$3>90' | awk '$4>70' | head -n 1 >> {output[0]}
        done
        cut -f14 {output[0]} | sed "s/-//g" > {output[1]}.tmp
        cut -f1 {output[0]} | sed "s/^/>/" | paste -d"\\n" - {output[1]}.tmp > {output[1]}
        rm {output[1]}.tmp
        """
        
rule add_description:
    conda:
        "env/xlwt.yaml"
    input:
        "strains/{sample}/virulence/results.tsv",
        config["virulence_factors"]
    output:
        "strains/{sample}/virulence/{sample}_virulence.tsv",
        "strains/{sample}/virulence/{sample}_virulence_summary.xlsx"
    script:
        "scripts/merge_result_and_description.py"
        
    
rule merge_description_files:
    conda:
        "env/pandas-openpyxl-pronto-xlrd.yaml"
    input:
        expand("strains/{sample}/virulence/{sample}_virulence_summary.xlsx", sample = read_naming.keys())
    output:
        "virulence_summary.xlsx"
    script:
        "scripts/merge_summary_xlsx.py"

rule blast_virulence_cds:
    conda:
        "env/blast.yaml"
    input:
        "virulence/protein_log.txt",
        "strains/{sample}/annotation/{sample}.fsa"
    output:
        "strains/{sample}/virulence/cds_results.tsv"
    shell:
        """
        makeblastdb -dbtype nucl -in {input[1]}
        echo "Virulence factor ID\tContigID\tPercentage identity\tCoverage of the Virulence factor cds on the alignement\tE-value" > {output[0]}
        for i in $(ls $(dirname {input[0]})/fastas/*.fasta); do
            tblastn -query ${{i}} -db {input[1]} -outfmt 6 | awk '$3>70' | head -n 1 >> {output[0]}
        done
        """
    
