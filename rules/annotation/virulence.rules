rule blast_virulence_protein:
    conda:
        "env/blast.yaml"
    input:
        "virulence/log.txt",
        "strains/{sample}/annotation/{sample}.fsa"
    output:
        "strains/{sample}/virulence/results.tsv"
    shell:
        """
        makeblastdb -dbtype prot -in {input[1]}
        echo "Virulence factor ID\tSequenced gene ID\tAmino acid percentage identity\tCoverage of the Virulence factor protein on the alignement\tE-value" > {output[0]}
        for i in $(ls $(dirname {input[0]})/fastas/*.fasta); do
            tblastn -query ${{i}} -db {input[1]} -outfmt "6 qseqid sseqid pident qcovs evalue" | awk '$3>90' >> {output[0]}
        done
        """
        
rule add_description:
    conda:
        "env/xlwt.yaml"
    input:
        "strains/{sample}/virulence/results.tsv",
        config["virulence_factors"]
    output:
        "strains/{sample}/virulence/{sample}_virulence.tsv",
        "strains/{sample}/virulence/{sample}_virulence_summary.xlsx"
    script:
        "scripts/merge_result_and_description.py"
        
    
rule merge_description_files:
    conda:
        "env/pandas-openpyxl-pronto-xlrd.yaml"
    input:
        expand("strains/{sample}/virulence/{sample}_virulence_summary.xlsx", sample = read_naming.keys())
    output:
        "virulence_summary.xlsx"
    script:
        "scripts/merge_summary_xlsx.py"

rule blast_virulence_cds:
    conda:
        "env/blast.yaml"
    input:
        "virulence/protein_log.txt",
        "strains/{sample}/annotation/{sample}.fsa"
    output:
        "strains/{sample}/virulence/cds_results.tsv"
    shell:
        """
        makeblastdb -dbtype nucl -in {input[1]}
        echo "Virulence factor ID\tContigID\tPercentage identity\tCoverage of the Virulence factor cds on the alignement\tE-value" > {output[0]}
        for i in $(ls $(dirname {input[0]})/cds_fasta/*.fasta); do
            blastn -query ${{i}} -db {input[1]} -outfmt "6 qseqid sseqid pident qcovs evalue" | awk '$3>90' >> {output[0]}
        done
        """
    
