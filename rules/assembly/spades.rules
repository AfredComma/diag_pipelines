rule remove_fasta_part_from_gff:
    input:
        "samples/{sample}/annotation/{sample}.gff"
    output:
        "samples/{sample}/annotation/{sample}_truncated.gff"
    shell:
        "sed '/^##FASTA$/,$d' {input} > {output}"
    
rule correct_error_paired_reads_with_spades:
    conda:
        "../../envs/spades.yaml"
    input:
        ancient("samples/{sample}/reads/trimmed/R1_paired.fastq"),
        ancient("samples/{sample}/reads/trimmed/R2_paired.fastq")
    output:
        temp("samples/{sample}/reads/corrected/R1_paired.00.0_0.cor.fastq.gz"),
        temp("samples/{sample}/reads/corrected/R2_paired.00.0_0.cor.fastq.gz"),
        temp("samples/{sample}/reads/corrected/R_unpaired.00.0_0.cor.fastq.gz")
    log:
        logging_folder+"/samples/{sample}/logs/spades_read_correction.txt"
    shell:
         """
         spades.py -1 {input[0]} -2 {input[1]} --only-error-correction -o $( dirname $(dirname {output[0]})) > {log} 
         """

rule correct_error_single_reads_with_spades:
    conda:
        "../../envs/spades.yaml"
    input:
        "samples/{sample}/reads/trimmed/single.fastq",
    output:
        temp("samples/{sample}/reads/corrected/single.00.0_0.cor.fastq.gz")
    log:
        logging_folder+"/samples/{sample}/logs/spades_read_correction.txt"
    shell:
         """
         spades.py -s {input[0]} --only-error-correction -o $( dirname $(dirname {output[0]})) > {log} 
         """

         
rule assemble_genome_paired_reads_with_spades:
    conda:
        "../../envs/spades.yaml"
    input:
        "samples/{sample}/reads/corrected/R1_paired.00.0_0.cor.fastq.gz",
        "samples/{sample}/reads/corrected/R2_paired.00.0_0.cor.fastq.gz",
        "samples/{sample}/reads/corrected/R_unpaired.00.0_0.cor.fastq.gz"
    output:
        "samples/{sample}/assembly/spades/contigs.fasta"
    log:
        logging_folder+"/samples/{sample}/logs/spades_assembly.txt"
    shell:
        """
        spades.py --only-assembler -1 {input[0]} -2 {input[1]} -s {input[2]} -o $( dirname {output[0]}) > {log}
        mv $(dirname {output[0]})/contigs.fasta $(dirname $(dirname {output[0]}))
        rm -rf $( dirname {output[0]})/*
        mv $(dirname $(dirname {output[0]}))/contigs.fasta $(dirname {output[0]})/
        """

rule assemble_genome_single_reads_with_spades:
    conda:
        "../../envs/spades.yaml"
    input:
        "samples/{sample}/reads/corrected/single.00.0_0.cor.fastq.gz",
    output:
        "samples/{sample}/assembly/spades/contigs.fasta"
    log:
        logging_folder+"/samples/{sample}/logs/spades_assembly.txt",
    shell:
        """
        spades.py --only-assembler -s {input[0]} -o $( dirname {output[0]}) > {log}
        mv $(dirname {output[0]})/contigs.fasta $(dirname $(dirname {output[0]}))
        rm -rf $( dirname {output[0]})/*
        mv $(dirname $(dirname {output[0]}))/contigs.fasta $(dirname {output[0]})/
        """
        
rule extract_contigs_500bp:
    input:
        "samples/{sample}/assembly/spades/contigs.fasta"
    output:
        "samples/{sample}/assembly/spades/contigs_500bp.fasta"
    shell:
        "awk '/^>/{{print (NR==1)?$0: \"\\n\" $0;next}} {{printf \"%s\", $0}}END{{print \"\"}}' {input} |  awk \'!/^>/ {{ next }} {{ getline seq }} length(seq) >= 500 {{ print $0 \"\\n\" seq }}\'  > {output}"  


rule rename_contigs:
    input:
        "samples/{sample}/assembly/spades/contigs_500bp.fasta"
    output:
        "samples/{sample}/assembly/spades/contigs_500bp_renamed.fasta"
    shell:
        "sed \"s/NODE_\\([0-9]\\+\\)_.*/contig_\\1/\" {input} > {output}"

