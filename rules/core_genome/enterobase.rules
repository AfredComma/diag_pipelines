import pandas

enterobase = pandas.read_csv("/home/sacha/Documents/new_strain/data/enterobase_database.tsv", sep="\t", index_col=0)


rule get_schema_from_enterobase:
    params:
        enterobase_scheme=enterobase.loc[config["species"], "scheme"],
        enterobase_species=enterobase.loc[config["species"], "species_id"]
    output:
        gene_list="core_genome/enterobase/genes.txt",
    shell:
        """
        wget -qO- http://enterobase.warwick.ac.uk/download_data?allele=profiles\&scheme={params.enterobase_scheme}\&species={params.enterobase_species} | gzip -d | head -n 1 | tr '[:space:]' '\\n' | tail -n +2 > {output[gene_list]} || :
        """

rule get_gff_for_reference:
    conda:
        "../../envs/entrez-direct.yaml"
    output:
        gff="references/{ref}/genome.gff"
    shell:
        """
        ftp=$(efetch -db assembly -id {wildcards.ref} -format docsum | xtract -pattern DocumentSummary -unless LatestAccession -if AssemblyStatus -equals "Complete Genome" -if FtpPath_RefSeq -element FtpPath_RefSeq)
        nucl_id=$(echo ${{ftp}} | sed  "s/\(\/GCF_.*\)/\\1\\1_genomic.gff.gz/")
        wget -qO- ${{nucl_id}} | gzip -d > {output[gff]}
        """

rule fetch_gene_entries_from_locus_tag:
    input:
        gff="references/{ref}/genome.gff",
        gene_list="core_genome/enterobase/genes.txt",
    output:
        bed="core_genome/enterobase/{ref}.bed",
    shell:
        """
        while read locus_tag
        do
            match=$(grep -c "${{locus_tag}}\>" {input[gff]}) || :
            if [[ "${{match}}" -eq 1 ]]
            then 
                grep "${{locus_tag}}\>" {input[gff]} | cut -f1,4,5 | awk '{{print $1 "\011" ($2 - 1) "\011" $3}}' >> {output[bed]}
            elif [[ "${{match}}" -eq 0 ]]
            then
                echo ${{locus_tag}} not found
            else
                echo ${{locus_tag}}
                echo "More than one locus tag matching in the gff file"
            fi
        done < {input[gene_list]}
        """
