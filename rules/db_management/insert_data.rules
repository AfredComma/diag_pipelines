rule load_rgi_results_into_db:
    conda:
        "env/mysql-pronto.yaml"
    input:
        ancient("strains/{sample}/resistance/rgi.tsv")
    output:
        "strains/{sample}/logs/rgi_db.txt"
    params:
        db = db_to_use,
        id = sample_correspondance,
        conf = mysql_conf_file,
        ontology_aro = ontology_file_aro,
        ontology_mo = ontology_file_mo,
        ontology_ro = ontology_file_ro
    script:
        "scripts/load_rgi_into_db.py"

rule load_abricate_results_into_db:
    conda:
        "env/python-mysql.yaml"
    input:
        "strains/{sample}/resistance/abricate.txt",
    output:
        "strains/{sample}/logs/abricate_db.txt"
    params:
        db = db_to_use,
        id = sample_correspondance,
        conf = mysql_conf_file
    script:
        "scripts/load_abricate_into_db.py"


        
rule load_mykrobe_into_db:
    conda:
        "env/python-mysql.yaml"
    input:
        "strains/{sample}/resistance/mykrobe.tsv"
    output:
        "strains/{sample}/logs/mykrobe_db.txt"
    params:
        db = db_to_use,
        id = sample_correspondance,
        conf = mysql_conf_file
    script:
        "scripts/load_mykrobe_into_db.py"
