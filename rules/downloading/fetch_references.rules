rule get_reference_or_representative_or_complete_genome:
    conda:
        "env/entrez-direct.yaml"
    output:
        "references/{ref}_url.txt"
    shell:
        """
        search=$( echo {wildcards.ref} | tr '_' ' ')
        esearch -db assembly -query "${{search}}" | efetch -db assembly -format docsum | xtract -pattern DocumentSummary -unless LatestAccession -if RefSeq_category -equals "reference genome" -element FtpPath_RefSeq | sed  "s/\(\/GCF_.*\)/\\1\\1_genomic.gbff.gz/" > {output[0]}
        if [  ! -s {output[0]} ]; then 
             esearch -db assembly -query "${{search}}" | efetch -db assembly -format docsum | xtract -pattern DocumentSummary -unless LatestAccession -if RefSeq_category -equals "representative genome" -element FtpPath_RefSeq | sed  "s/\(\/GCF_.*\)/\\1\\1_genomic.gbff.gz/" > {output[0]}
        if [ ! -s {output[0]} ]; then
             esearch -db assembly -query "${{search}}" | efetch -db assembly -format docsum | xtract -pattern DocumentSummary -unless LatestAccession -if AssemblyStatus -equals "Complete Genome" -element FtpPath_RefSeq | sed  "s/\(\/GCF_.*\)/\\1\\1_genomic.gbff.gz/" > {output[0]}
        fi
        fi
        """

rule download_genomes_from_url:
    input:
        "references/{ref}_url.txt"
    output:
        "references/{ref}/genome.gbk"
    shell:
        """
        head -n 1 {input[0]} | xargs wget -qO- | gzip -d > {output[0]}
        """
        

rule get_all_complete_genomes_urls:
    conda:
        "env/entrez-direct.yaml"
    output:
        "references/{species}_all_uniq_subtypes_complete.txt"
    shell:
        """
        esearch -db assembly -query "{wildcards.species}" | efetch -db assembly -format docsum | xtract -pattern DocumentSummary -unless LatestAccession -if AssemblyStatus -equals "Complete Genome" -if FtpPath_RefSeq -if Sub_value -element Sub_value | uniq -u > {output[0]}
        """

rule download_every_complete_genome:
    input:
        "references/{species}_all_uniq_subtypes_complete.txt"
    output:
        dynamic("references/{species}_{ref}.gbk")
    shell:
        """
        while read -r p 
        do
             esearch -db assembly -query "{wildcards.species} ${{p}}" | efetch -db assembly -format docsum;
        done < "{input[0]}"
        """



        
