
rule prepare_maxbin_abundance_file:
    input:
        "samples/{sample}/quality/contig_coverage.txt"
    output:
        "samples/{sample}/binning/maxbin/contig_abundance.txt"
    log:
        "samples/{sample}/binning/maxbin/{sample}.log"
    shell:
        """
        cut -f 1,4 {input[0]} > {output[0]}
        """
        
rule maxbin_binning:
    conda:
        pipeline_path + "envs/maxbin.yaml"
    input:
        contigs = "samples/{sample}/assembly/spades/coverage_filtered/contigs_500bp_high_coverage.fasta",
        abundance = "samples/{sample}/binning/maxbin/contig_abundance.txt"
    output:
        dynamic("samples/{sample}/binning/maxbin/{bin_id}.fasta")
    log:
        "samples/{sample}/binning/maxbin/{sample}.log",
    shell:
        """
        run_MaxBin.pl -contig {input[contigs]} -abund {input[abundance]} -out $( dirname {output[0]})/bin -plotmarker > {log}
        """

rule prepare_contig_bins_table:
    input:
        fasta_files = dynamic("samples/{sample}/binning/maxbin/{bin_id}.fasta"),
    output:
        "samples/{sample}/binning/maxbin/maxbin_table.tab",
    log:
        "samples/{sample}/binning/maxbin/{sample}.log",
    shell:
        """
        echo {input[fasta_files]}
        scripts/maxbin2classif.py -i {input[fasta_files]} > {output[0]}
        """

rule plot_gc_cov_maxbin_bins:
    input:

    output:

    shell:
        '''
        scripts/gc_coverage_plot.py -t maxbin_table.tab -m contigs_500bp_renamed.fasta -d contig_abundance.txt 
        '''
