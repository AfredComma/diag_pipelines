rule raxml_on_alignment_to_ref:
    conda:
        "env/raxml.yaml"
    input:
        "typing/{snp_caller}/core_parsnp/{ref}/{mapping_method}/alignment.fa"
    output:
        "phylogeny/{snp_caller}/core_parsnp/{ref}/{mapping_method}/normal_run/RAxML_bestTree.nw"
    log:
        "logs/phylogeny/RAxML_log.{ref}"
    shell:
        """
        if [ -d $(dirname {output[0]}) ];
        then
            rm -rf $(dirname {output[0]})
            mkdir -p $(dirname {output[0]})
        fi
        raxmlHPC -V -m GTRCAT -n {wildcards.ref} -s {input[0]} -w $(dirname $(readlink -f {output[0]})) -p 123 > {log} 
        cp $(dirname {output[0]})/RAxML_bestTree.{wildcards.ref} $(dirname {output[0]})/RAxML_bestTree.nw 
        """

rule raxml_bootstrap:
    conda:
        "env/raxml.yaml"
    input:
        "typing/{snp_caller}/core_parsnp/{ref}/{mapping_method}/alignment.fa"
    output:
        "phylogeny/{snp_caller}/core_parsnp/{ref}/{mapping_method}/bootstrap_run/RAxML_bootstrap.nw"
    log:
        "logs/phylogeny/RAxML_log.{ref}_boot"
    shell:
        """
        if [ -d $(dirname {output[0]}) ];
        then
            rm -rf $(dirname {output[0]})
            mkdir -p $(dirname {output[0]})
        fi
        raxmlHPC -m GTRCAT -V -n {wildcards.ref} -s {input[0]} -b 123 -w $(dirname $(readlink -f {output[0]})) -N 100 -p 123 > {log} 
        cp $(dirname {output[0]})/RAxML_bootstrap.{wildcards.ref} $(dirname {output[0]})/RAxML_bootstrap.nw 
        """

rule convert_phylogeny_to_image:
    conda:
        "env/newick-utils.yaml"
    input:
        "phylogeny/{snp_caller}/core_parsnp/{ref}/{mapping_method}/normal_run/RAxML_bestTree.nw",
        "phylogeny/{snp_caller}/core_parsnp/{ref}/{mapping_method}/bootstrap_run/RAxML_bootstrap.nw",
        "typing/mlst/summary.out",
        "typing/mlst/references.out",
        "references/{ref}/genome.fasta",                
    output:
        "phylogeny/{snp_caller}/core_parsnp/{ref}/{mapping_method}/renaming.txt",
        "phylogeny/{snp_caller}/core_parsnp/{ref}/{mapping_method}/phylogeny.svg",
    shell:
        """
        cut -f1,3 {input[2]} | sed "s/\\t/_ST_/" > {output[0]}.tmp
        cut -f 1 {input[2]} | paste - {output[0]}.tmp > {output[0]}
        st_ref=$(grep "^{wildcards.ref}"$'\\t' {input[3]} | cut -f3)
        id=$(grep ">" {input[4]} | cut -f1 -d' ' | sed "s/>//")
        echo {wildcards.ref}'\t'${{id}}"_ST_"${{st_ref}} >> {output[0]}
        nw_support {input[0]} {input[1]} | nw_rename - {output[0]} | nw_display -S -s -b 'opacity:0' -w -1600 -I m -W 20 -v 15 - > {output[1]}
        """
