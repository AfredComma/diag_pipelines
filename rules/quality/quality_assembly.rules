rule qualimap_mapping:
    conda:
        "env/qualimap.yaml"
    input:
        "strains/{sample}/mapping/bwa/{sample}.bam"
    output:
        "strains/{sample}/quality/qualimap/qualimapReport.html",
        "strains/{sample}/quality/qualimap/genome_results.txt",
    log:
        "strains/{sample}/logs/assembly/qualimap.txt",
    shell:
        """
        qualimap bamqc -bam {input[0]} -outdir $(dirname {output}) > {log[0]}
        """

rule extract_contig_coverage:
    input:
        "strains/{sample}/quality/qualimap/genome_results.txt"
    output:
        "strains/{sample}/quality/contig_coverage.txt"
    shell:
        """
        sed -ne '/Coverage per contig/,$ p'  {input[0]} | grep contig_ | sed "s/^[ \\t]*//" > {output[0]}
        """
        
rule quast:
    conda:
        "env/quast.yaml"
    input:
        "strains/{sample}/annotation/{sample}.fsa"
    output:
        "strains/{sample}/quality/quast/report.txt"
    shell:
        "quast.py {input} -o $( dirname {output})"



rule filter_contigs_on_coverage:
    params:
        cutoff = config["cov_cutoff"]
    input:
        "strains/{sample}/assembly/spades/contigs_500bp_renamed.fasta",
        "strains/{sample}/quality/contig_coverage.txt"
    output:
        "strains/{sample}/assembly/spades/coverage_filtered/contigs_500bp_high_coverage.fasta",
        "strains/{sample}/assembly/spades/coverage_filtered/contigs_500bp_low_coverage.fasta"
    shell:
        """
        awk '$4 < {params.cutoff}' {input[1]} | cut -f 1 | xargs -I % grep -A 1 "^>%$" {input[0]} > {output[1]}
        awk '$4 > {params.cutoff}' {input[1]} | cut -f 1 | xargs -I % grep -A 1 "^>%$" {input[0]} > {output[0]}
        if [ ! -s {output[0]} ];
        then
            echo "No contigs with coverage higher than {params.cutoff}"
            exit 1
        fi
        """
        

