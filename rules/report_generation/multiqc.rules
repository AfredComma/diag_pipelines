rule create_multiqc_report_for_assembly:
    params:
        configfile = multiqc_configfile
    conda:
        "../../envs/multiqc.yaml"
    input:
        assembly=expand("samples/{sample}/multiqc/self_genome/log.txt", sample = list(read_naming.keys())),
        mapping=expand("samples/{sample}/multiqc/mapping_to_{sample}_assembled_genome/log.txt", sample = list(read_naming.keys())),
        
    output:
        "quality/multiqc/self_genome/multiqc_report.html"
    log:
        logging_folder+"logs/multiqc/self_genome.txt"
    shell:
        """
        multiqc -c {params.configfile} -f -o $(dirname {output[0]}) $(dirname {input[assembly]} {input[mapping]} | tr "\n" " ") &> {log[0]}
        """


rule create_multiqc_report_for_mapping_to_reference:
    params:
        configfile = multiqc_configfile
    conda:
        "../../envs/multiqc.yaml"
    input:
        mapping = expand("samples/{sample}/multiqc/mapping_to_{{ref}}/log.txt", sample = list(read_naming.keys()))
    output:
        "quality/multiqc/mapping_to_{ref}/multiqc_report.html"
    log:
        logging_folder+"/logs/quality/multiqc/mapping_to_{ref}.txt"
    shell:
        """
        multiqc -c {params.configfile} -f -o $(dirname {output[0]}) $(dirname {input[mapping]}) &> {log[0]}
        """


        
