rule get_files_for_multiqc_to_reference_paired:
    input:
        "samples/{sample}/quality/mapping/bwa/{ref}/qualimap/qualimapReport.html",
        "samples/{sample}/reads/trimmed/fastqc/R1_paired_fastqc/summary.txt",
        "samples/{sample}/reads/trimmed/summary.txt",
    output:
        "samples/{sample}/multiqc/mapping_to_{ref}/log.txt"
    shell:
        """
        mkdir -p $(dirname {output[0]})/{wildcards.sample}
        cp -R $(dirname {input[0]})/* $(dirname {output[0]})/{wildcards.sample}
        cp -R $(dirname {input[1]})/* $(dirname {output[0]})/{wildcards.sample}
        sed "s/_R1\.fastq/\.fastq/g" {input[2]} | sed "s/_R2\.fastq/\.fastq/g" > $(dirname {output[0]})/trimmomatic.log
        sed -i.bak "s/R1_paired\.fastq/{wildcards.sample}/" $(dirname {output[0]})/{wildcards.sample}/fastqc_data.txt
        sed -i.bak "s/R2_paired\.fastq/{wildcards.sample}/" $(dirname {output[0]})/{wildcards.sample}/fastqc_data.txt
        echo "okay" > {output}
        """


rule get_files_for_multiqc_to_reference_single:
    input:
        "samples/{sample}/quality/mapping/bwa/{ref}/qualimap/qualimapReport.html",
        "samples/{sample}/reads/trimmed/fastqc/single_fastqc/summary.txt",
        "samples/{sample}/reads/trimmed/summary.txt",
    output:
        "samples/{sample}/multiqc/mapping_to_{ref}/log.txt"
    shell:
        """
        mkdir -p $(dirname {output[0]})/{wildcards.sample}
        cp -R $(dirname {input[0]})/* $(dirname {output[0]})/{wildcards.sample}
        cp -R $(dirname {input[1]})/* $(dirname {output[0]})/{wildcards.sample}
        sed "s/_single//g" {input[2]} > $(dirname {output[0]})/trimmomatic.log
        sed -i.bak "s/single\.fastq/{wildcards.sample}/" $(dirname {output[0]})/{wildcards.sample}/fastqc_data.txt

        echo "okay" > {output}
        """

rule multiqc_all_to_reference:
    params:
        configfile = multiqc_configfile
    conda:
        "../../envs/multiqc.yaml"
    input:
        expand("samples/{sample}/multiqc/mapping_to_{{ref}}/log.txt", sample = list(read_naming.keys()))
    output:
        "quality/multiqc/mapping_to_{ref}/multiqc_report.html"
    log:
        logging_folder+"/logs/quality/multiqc/mapping_to_{ref}.txt"
    shell:
        """
        multiqc -c {params.configfile} -f -o $(dirname {output[0]}) samples/*/multiqc/mapping_to_{wildcards.ref}/ &> {log[0]}
        """


        
