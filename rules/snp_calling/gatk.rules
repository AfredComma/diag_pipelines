rule create_dict_for_reference:
    conda:
        "env/gatk.yaml"
    input:
        "references/{ref}/genome.fasta"
    output:
        "references/{ref}/genome.dict"
    shell:
        """
        samtools faidx {input[0]}
        gatk-launch CreateSequenceDictionary -R {input[0]}
        """

rule haplotype_caller_vcf:
    conda:
        "env/gatk.yaml"
    input:
        "strains/{sample}/mapping/{mapping_method}/{ref}/deduplicated_filtered.bam",
        "references/{ref}/genome.fasta",
        "references/{ref}/genome.dict"
    output:
        "strains/{sample}/snps/gatk/{ref}/{mapping_method}/snps.vcf",
        "strains/{sample}/snps/gatk/{ref}/{mapping_method}/snps.vcf.gz",
        "strains/{sample}/snps/gatk/{ref}/{mapping_method}/snps.vcf.idx",
        "strains/{sample}/snps/gatk/{ref}/{mapping_method}/snps.vcf.gz.tbi",
    shell:
        """
        gatk-launch HaplotypeCaller -ploidy 1 -output {output[0]} --input {input[0]} --reference {input[1]}
        bgzip -c {output[0]} > {output[1]}
        tabix -f -p vcf {output[1]}
        """
        
rule merge_haplotype_caller_vcf_files_filter_core_genome:
    conda:
        "env/gatk.yaml"
    input:
        bed="core_genome/{ref}_core_parsnp_sorted_withdot.bed",
        vcfs=expand("strains/{sample}/snps/gatk/{{ref}}/{{mapping_method}}/full_genome/snps.vcf.gz", sample=read_naming.keys())
    output:
        "typing/gatk/core_parsnp/{ref}/{mapping_method}/before_validation/merged.vcf",
        "typing/gatk/core_parsnp/{ref}/{mapping_method}/before_validation/merged.vcf.gz",
        "typing/gatk/core_parsnp/{ref}/{mapping_method}/before_validation/merged.vcf.gz.tbi",
    shell:
        """
        bcftools merge {input[vcfs]} -O z > {output[0]}.tmp
        tabix -f -p vcf {output[0]}.tmp
        bcftools view -R {input[bed]} {output[0]}.tmp | bcftools sort -O v - > {output[0]}
        bgzip -c {output[0]} > {output[1]}
        tabix -f -p vcf {output[1]}
        rm {output[0]}.tmp*
        """


rule haplotype_caller_gvcf:
    conda:
        "env/gatk.yaml"
    input:
        "strains/{sample}/mapping/bwa/{ref}/mapping_deduplicated.bam",
        "references/{ref}/genome.fasta",
        "references/{ref}/genome.dict"
    output:
        "strains/{sample}/snps/gatk/{ref}/full_genome/snps.g.vcf",
        "strains/{sample}/snps/gatk/{ref}/full_genome/snps.g.vcf.gz",
        "strains/{sample}/snps/gatk/{ref}/full_genome/snps.g.vcf.idx",
        "strains/{sample}/snps/gatk/{ref}/full_genome/snps.g.vcf.gz.tbi",
    shell:
        """
        gatk-launch HaplotypeCaller -ploidy 1 --output {output[0]} --input {input[0]} --reference {input[1]} -ERC GVCF
        bgzip -c {output[0]} > {output[1]}
        tabix -f -p vcf {output[1]}
        """


        
rule merge_gvcf_files:
    conda:
        "env/gatk.yaml"
    input:
        ref="references/{ref}/genome.fasta",
        gvcfs=expand("strains/{sample}/snps/gatk/{{ref}}/full_genome/snps.g.vcf.gz", sample=read_naming.keys())
    output:
        "typing/gatk_gvcfs/core_{method}/{ref}/full_genome/genomics_db/vcfheader.vcf"
    shell:
        """
        if [ -d $(dirname {output[0]}) ]; then
            rm -rf $(dirname {output[0]})
        fi
        acc=$(grep ">" {input[ref]} | sed "s/ .*//" | sed "s/>//")
        var=$(echo {input[gvcfs]} | sed "s/ / -V /g")
        gatk-launch GenomicsDBImport --genomicsdb-workspace-path  $(dirname {output[0]}) -V ${{var}} --intervals ${{acc}}
        """

rule extract_gvcf_files:
    conda:
        "env/gatk.yaml"
    input:
        "references/{ref}/genome.fasta",
        "typing/gatk_gvfcs/core_{method}/{ref}/full_genome/genomics_db/vcfheader.vcf"
    output:
        "typing/gatk_gvcfs/core_{method}/{ref}/full_genome/merged.vcf",
        "typing/gatk_gvcfs/core_{method}/{ref}/full_genome/merged.vcf.gz",
        "typing/gatk_gvcfs/core_{method}/{ref}/full_genome/merged.vcf.gz.tbi"
    shell:
        """
        gatk-launch GenotypeGVCFs -R {input[0]} -V gendb://$(dirname {input[1]}) -O {output[0]}
        bgzip -c {output[0]} > {output[1]}
        tabix -f -p vcf {output[1]}
        """
    

        

        
    
