rule extract_snps_core:
    conda:
        "env/bcftools.yaml"
    input:
        "core_genome/{ref}_core_parsnp_sorted.bed",
        "strains/{sample}/mapping/snippy/{ref}/{sample}/snps.vcf.gz"
    output:
        "strains/{sample}/core/{ref}/snps.vcf.gz",
        "strains/{sample}/core/{ref}/snps.vcf.gz.tbi"
    shell:
        """
        bcftools view -R {input[0]} -O z {input[1]} > {output[0]}.tmp
        bcftools sort {output[0]}.tmp | sed "s/\\tsnps\\b/\\t{wildcards.sample}/" | bgzip -c > {output[0]}
        rm {output[0]}.tmp
        tabix -f -p vcf {output[0]}
        """


rule merge_vcf_files:
    params:
        sample=sorted(read_naming.keys())[0]
    conda:
        "env/bcftools.yaml"
    input:
        expand("strains/{sample}/core/{{ref}}/snps.vcf.gz", sample=sorted(read_naming.keys()))
    output:
        "typing/core_parsnp/{ref}/merged.vcf"
    shell:
        """
        bcftools merge {input} > {output[0]}
        """


rule extract_only_snps:
    conda:
        "env/bcftools.yaml"
    input:
        "typing/core_{method}/{ref}/merged.vcf"
    output:
        "typing/core_{method}/{ref}/merged_snps_only.vcf"
    shell:
        """
        bcftools view -i 'type="snp"' {input[0]} > {output[0]}
        """
        

rule extract_genotype_info_no_indels:
    conda:
        "env/bcftools.yaml"
    input:
        "typing/core_{method}/{ref}/merged_snps_only.vcf"
    output:
        "typing/core_{method}/{ref}/genotype.GT.FORMAT",
    shell:
        """
        bcftools query -H -f "%CHROM\t%POS\t%REF\t%ALT[\t%GT]\n" {input[0]} | tr "\s.\s" "0" | tr -d ":GT\s" | sed "s/\[[0-9]\+\]//g" > {output[0]}
        """
        
