rule exclude_indel_other_ref_mutations:
    conda:
        "env/vt-bcftools.yaml"
    input:
        "typing/{snp_caller}/core_{method}/{ref}/{mapping_method}/{validation}/merged.vcf"
    output:
        "typing/{snp_caller}/core_{method}/{ref}/{mapping_method}/{validation}/merged_mnp_snp_complex.vcf.gz",
        "typing/{snp_caller}/core_{method}/{ref}/{mapping_method}/{validation}/merged_mnp_snp_complex.vcf.gz.tbi",
        "typing/{snp_caller}/core_{method}/{ref}/{mapping_method}/{validation}/merged_mnp_snp_complex.vcf",
    shell:
        """
        bcftools view -Ou -e 'type="indel"||type="other"||type="ref"' {input[0]} | bcftools sort -O z - > {output[0]}
        tabix -f -p vcf {output[0]}
        gzip -d -c {output[0]} > {output[2]}
        """
        
rule split_mnps_into_snps:
    conda:
        "env/vt-bcftools.yaml"
    input:
        "typing/{snp_caller}/core_{method}/{ref}/{mapping_method}/{validation}/merged_mnp_snp_complex.vcf.gz"
    output:
        "typing/{snp_caller}/core_{method}/{ref}/{mapping_method}/{validation}/merged_mnp_decomposed_to_snp.vcf.gz",
        "typing/{snp_caller}/core_{method}/{ref}/{mapping_method}/{validation}/merged_mnp_decomposed_to_snp.vcf.gz.tbi",
        "typing/{snp_caller}/core_{method}/{ref}/{mapping_method}/{validation}/merged_mnp_decomposed_to_snp.vcf",
    shell:
        """
        bcftools norm -m -both {input[0]} | vt decompose_blocksub - | bcftools norm -m +both - | bcftools sort -O z - > {output[0]}
        tabix -f -p vcf {output[0]}
        bgzip -d -c {output[0]} > {output[2]}
        """

rule extract_genotype_info:
    conda:
        "env/bcftools.yaml"
    input:
        "typing/{snp_caller}/core_{method}/{ref}/{mapping_method}/{validation}/merged_mnp_decomposed_to_snp.vcf.gz"
    output:
        "typing/{snp_caller}/core_{method}/{ref}/{mapping_method}/{validation}/genotype.GT.FORMAT",
    shell:
        """
        bcftools query -H -f "%CHROM\\t%POS\\t%REF\\t%ALT[\\t%GT]\n" {input[0]}  > {output[0]}
        """
        
        


        
