rule merge_multiallelic_by_sample:
    conda:
        pipeline_path + "envs/bcftools.yaml"
    input:
        vcf="typing/{snp_caller}/{core_genome_or_full_genome}/{mapping_method}/all_samples_snp.vcf.gz",
        vcf_tbi="typing/{snp_caller}/{core_genome_or_full_genome}/{mapping_method}/all_samples_snp.vcf.gz.tbi",
    output:
        merged_multi="samples/{sample}/snps/{snp_caller}/{core_genome_or_full_genome}/{mapping_method}/snps.vcf",
    shell:
        """
        bcftools view --samples {wildcards.sample} --trim-alt-alleles {input[vcf]} | bcftools norm -m +any --output {output[merged_multi]}
        """


rule extract_snps:
    conda:
        pipeline_path + "envs/bcftools.yaml"
    input:
        merged_multi="samples/{sample}/snps/{snp_caller}/{core_genome_or_full_genome}/{mapping_method}/snps.vcf.gz",
        merged_multi_tbi="samples/{sample}/snps/{snp_caller}/{core_genome_or_full_genome}/{mapping_method}/snps.vcf.gz.tbi",
    output:
        alt="samples/{sample}/snps/{snp_caller}/{core_genome_or_full_genome}/{mapping_method}/snps.vcf",
        unknowns="samples/{sample}/snps/{snp_caller}/{core_genome_or_full_genome}/{mapping_method}/unknowns.tab",
    shell:
        """
        bcftools -i 'GT="alt"' --samples {wildcards.sample} {input[merged_multi]} > {output[alt]} 
        bcftools -i 'GT="."' --samples {wildcards.sample} {input[merged_multi]} | bcftools query -f "%CHROM %POS\n" > {output[unknowns]}
        """
        

rule create_consensus_sequence:
    conda:
        pipeline_path + "envs/bcftools.yaml"
    input:
        alt="samples/{sample}/snps/{snp_caller}/{core_genome_or_full_genome}/{mapping_method}/snps.vcf.gz",
        alt_tbi="samples/{sample}/snps/{snp_caller}/{core_genome_or_full_genome}/{mapping_method}/snps.vcf.gz.tbi",
        unknowns="samples/{sample}/snps/{snp_caller}/{core_genome_or_full_genome}/{mapping_method}/unknowns.tab",
        ref="references/{core_genome_or_full_genome}/genome_fasta.fasta",
    output:
        alignment="samples/{sample}/alignment/{snp_caller}/{core_genome_or_full_genome}/{mapping_method}/consensus.fa",
    shell:
        """
        bcftools consensus --mask {input[unknowns]} --fasta-ref {input[ref]} --output {output[alignment]} --sample {wildcards.sample} {input[alt]}
        sed -i "s/^>.*/>{wildcards.sample}/" {output[alignment]} 
        """


rule concatenate_consensus_fasta_files:
    input:
        fasta = expand("samples/{sample}/alignment/{{snp_caller}}/{{core_genome_or_full_genome}}/{{mapping_method}}/consensus.fa", sample=read_naming.keys()),
        ref = "references/{core_genome_or_full_genome}/genome_fasta.fasta",
    output:
        alignment="typing/{snp_caller}/{core_genome_or_full_genome}/{mapping_method}/alignment.fa"
    shell:
        """
        sed "s/^>.*/>{wildcards.core_genome_or_full_genome}/" {input[ref]} | cat {input[fasta]} - > {output[alignment]}
        """
    

