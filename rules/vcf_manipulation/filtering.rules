rule coverage_filtering:
    params:
        min_cov=minimum_coverage,
    conda:
        "../../envs/vt-bcftools.yaml"
    input:
        vcf="typing/{snp_caller}/full_genome/{ref}/{mapping_method}/raw/annotated_am_all_samples.vcf",
    output:
        vcf_cov="typing/{snp_caller}/full_genome/{ref}/{mapping_method}/filtering/cov_all_samples.vcf",
    shell:
        """
        bcftools filter -s "lowcov" -S "." -e '(FORMAT/DP)<{params.min_cov}' {input[vcf]} > {output[vcf_cov]}
        """

rule frequency_filtering:
    params:
        min_alt=minimum_alternate_frac,
    conda:
        "../../envs/vt-bcftools.yaml",
    input:
        vcf_sample="typing/{snp_caller}/full_genome/{ref}/{mapping_method}/filtering/cov_all_samples.vcf",
    output:
        vcf_cov_freq="typing/{snp_caller}/full_genome/{ref}/{mapping_method}/filtering/freq_cov_all_samples.vcf",
    shell:
        """
        bcftools filter -s "freq" -S "." -e "GT='alt' & FORMAT/AM/FORMAT/DP < {params.min_alt}" {input[vcf_sample]} > {output[vcf_cov_freq]}
        """

rule normalize_and_vt_decompose_from_freebayes:
    conda:
        "../../envs/vt-bcftools.yaml"
    input:
        joint_genotype_vcf="typing/freebayes_joint_genotyping/full_genome/{ref}/{mapping_method}/filtering/freq_cov_all_samples.vcf.gz",
        joint_genotype_vcf_tbi="typing/freebayes_joint_genotyping/full_genome/{ref}/{mapping_method}/filtering/freq_cov_all_samples.vcf.gz.tbi",
        ref=ancient("references/{ref}/genome_fasta.fasta"),
    output:
        normalized="typing/freebayes_joint_genotyping/full_genome/{ref}/{mapping_method}/filtering/normalized_freq_cov_all_samples.vcf"
    log:
        logging_folder+"/typing/freebayes_joint_genotyping/full_genome/{ref}/{mapping_method}/vt_normalize.txt"
    shell:
        """
        bcftools norm -f {input[ref]} -m -any {input[joint_genotype_vcf]} | vt decompose_blocksub -a - | bcftools norm -m +any > {output[normalized]}
        """

rule normalize_from_gatk:
    conda:
        "../../envs/vt-bcftools.yaml"
    input:
        joint_genotype_vcf="typing/gatk_gvcfs/full_genome/{ref}/{mapping_method}/filtering/freq_cov_all_samples.vcf.gz",
        joint_genotype_vcf_tbi="typing/gatk_gvcfs/full_genome/{ref}/{mapping_method}/filtering/freq_cov_all_samples.vcf.gz.tbi",
        ref=ancient("references/{ref}/genome_fasta.fasta"),
    output:
        normalized="typing/gatk_gvcfs/full_genome/{ref}/{mapping_method}/filtering/normalized_freq_cov_all_samples.vcf"
    log:
        logging_folder+"/typing/gatk_gvcfs/full_genome/{ref}/{mapping_method}/normalize.txt"
    shell:
        """
        bcftools norm -f {input[ref]} {input[joint_genotype_vcf]} > {output[normalized]}
        """

rule extract_allele_type_from_joint_genotyping_gatk:
    conda:
        "../../envs/gatk.yaml"
    input:
        joint_genotype_vcf="typing/gatk_gvcfs/full_genome/{ref}/{mapping_method}/filtering/normalized_freq_cov_all_samples.vcf.gz",
        joint_genotype_vcf_tbi="typing/gatk_gvcfs/full_genome/{ref}/{mapping_method}/filtering/normalized_freq_cov_all_samples.vcf.gz.tbi",
    output:
        vcf_mutation_type="typing/gatk_gvcfs/full_genome/{ref}/{mapping_method}/all_samples_{type}.vcf",
    log:
        logging_folder+"/typing/gatk_gvcfs/full_genome/{ref}/{mapping_method}/all_samples_{type}.txt"
    shell:
        """
        type=$(echo {wildcards.type}  | tr '[:lower:]' '[:upper:]')
        gatk-launch SelectVariants --output {output[vcf_mutation_type]} --variant {input[joint_genotype_vcf]} -select-type ${{type}} &> /dev/null
        """

rule extract_allele_type_from_joint_genotyping_freebayes:
    conda:
        "../../envs/vt-bcftools.yaml"
    input:
        joint_genotype_vcf="typing/freebayes_joint_genotyping/full_genome/{ref}/{mapping_method}/filtering/normalized_freq_cov_all_samples.vcf.gz",
        joint_genotype_vcf_tbi="typing/freebayes_joint_genotyping/full_genome/{ref}/{mapping_method}/filtering/normalized_freq_cov_all_samples.vcf.gz.tbi",
    output:
        vcf_mutation_type="typing/freebayes_joint_genotyping/full_genome/{ref}/{mapping_method}/all_samples_{type}.vcf",
    log:
        logging_folder+"/typing/freebayes_joint_genotyping/full_genome/{ref}/{mapping_method}/all_samples_{type}.txt"
    shell:
        """
        bcftools view -i 'type="{wildcards.type}"' {input[joint_genotype_vcf]} > {output[vcf_mutation_type]}
        """



