pipeline_path = workflow.basedir + "/../"

species = "Mycobacterium_tuberculosis"

rule create_reference_lists_from_databases:
    conda:
        pipeline_path + "envs/pandas-openpyxl-pronto-xlrd.yaml"
    input:
        miotto = pipeline_path + "data/" + species + "/mutations/miotto_high_moderate_minimum_confidence_annotated.tsv",
        mykrobe = pipeline_path + "data/" + species + "/mutations/mykrobe_annotated.tsv",
        card = pipeline_path + "data/" + species + "/mutations/rgi_annotated_full_2_0_0.tsv",
        walker = pipeline_path + "data/" + species + "/mutations/walker_resistant_annotated.tsv",
        resistance_genes = pipeline_path + "data/" + species + "/metadata/resistance_genes.tsv",
        locus_tag = pipeline_path + "data/" + species + "/metadata/locus_tags.tsv",
    output:
        four_tsv = pipeline_path + "data/"+ species + "/mutations/level_four_agreement.tsv",
        three_tsv = pipeline_path + "data/"+ species + "/mutations/level_three_agreement.tsv",
        two_tsv = pipeline_path + "data/"+ species + "/mutations/level_two_agreement.tsv",
        one_tsv = pipeline_path + "data/"+ species + "/mutations/level_one_agreement.tsv",
        summary_four = pipeline_path + "data/"+ species + "/mutations/level_four_agreement.xlsx",
        summary_three = pipeline_path + "data/"+ species + "/mutations/level_three_agreement.xlsx",
        summary_two = pipeline_path + "data/"+ species + "/mutations/level_two_agreement.xlsx",
        summary_one = pipeline_path + "data/"+ species + "/mutations/level_one_agreement.xlsx",
    script:
        "scripts/generate_excel_file_common_positions.py"
