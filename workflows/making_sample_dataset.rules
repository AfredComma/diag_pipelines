import sys
import pandas

sys.path.insert(0, config["absolute_path_of_pipeline_folder"])

import helper_scripts.get_sample_naming_from_link_folder as sample_naming

from helper_scripts.get_folder_and_subfolders import get_folders_structure_with_sample_naming

link_directory="links/"

reads_local, folders, original_name = get_folders_structure_with_sample_naming(link_directory, sample_naming.get_read_naming_patterns)

if "sample_names" in config.keys() and config["sample_names"]:
    sample_correspondance = pandas.read_csv(config["sample_names"], sep="\t", index_col=0)
    all_samples= "".join(list(str(sample_correspondance["sample_name"])))
    if "(" in all_samples or ")" in all_samples or "_-_" in all_samples:
        raise ValueError("Forbidden character in sample name in sample name file") 
    for i in reads_local.keys():
        if i not in sample_correspondance.index:
            sample_correspondance.loc[i] = i
    read_correct = {}
    original_correct = {}
    folders_correct = {}
    if folders.keys():
        for i in folders.keys():
            folders_correct[str(sample_correspondance.loc[i, "sample_name"])] = folders[i]
        for i in original_name.keys():
            original_correct[str(sample_correspondance.loc[i, "sample_name"])] = original_name[i]
        for i in reads_local.keys():
            read_correct[str(sample_correspondance.loc[i, "sample_name"])] = reads_local[i]
    original_name = original_correct
    reads_local = read_correct
    folders = folders_correct


sras_ext = {}
sras_folder = {}
reads_sra = {}
species_names = pandas.DataFrame(columns=["genus", "species"])

if "sra_samples" in config.keys() and config["sra_samples"]:
    reads_sra_pandas = pandas.read_csv(config["sra_samples"], sep="\t", index_col=0)
    all_samples= "".join(list(reads_sra_pandas["SampleName"]))
    if "(" in all_samples or ")" in all_samples or "_-_" in all_samples:
        raise ValueError("Forbidden character in sample name in sra file") 
    for i in reads_sra_pandas.index:
        sample_name=reads_sra_pandas.loc[i, "SampleName"]
        if sample_name in reads_sra.keys():
            sample_name=sample_name+"_"+str(reads_sra.count(sample_name))
        reads_sra[sample_name]=str(i)
        sras_folder[sample_name]="."
        if reads_sra_pandas.loc[i, "LibraryLayout"].lower()=="paired":
            sras_ext[sample_name]=["1.fastq.gz", "2.fastq.gz"]
        elif reads_sra_pandas.loc[i, "LibraryLayout"].lower()=="single":
            sras_ext[sample_name]=["single.fastq.gz"]
        else:
            raise ValueError("Problem in the sra file")
        species_names.loc[sample_name]=[reads_sra_pandas.loc[i, "ScientificName"].split(" ")[0],reads_sra_pandas.loc[i, "ScientificName"].split(" ")[1].split("_")[0]]
                        
            
read_naming = { **reads_local, **sras_ext}
original_name = { **original_name, **reads_sra}
folders = { **folders, **sras_folder}

if "species_names_correspondance_file" in config.keys() and config["species_names_correspondance_file"]:
    csv=pandas.read_csv(config["species_names_correspondance_file"], sep="\t", index_col=0)
    csv.index = [str(x) for x in csv.index]
    species_names = pandas.concat([csv, species_names])
    print(species_names.index)




