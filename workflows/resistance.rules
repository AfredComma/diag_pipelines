include:
    "typing.rules"

resistance_prediction_sofwares = config["resistance_prediction_softwares"]

if "shift_for_mapping" not in config.keys():
    shift = 300
else:
    shift = config["shift_for_mapping"]

if "mykrobe_panel" not in config.keys():
    mykrobe_panel = "bradley-2015"
else:
    mykrobe_panel = config["mykrobe_panel"]
    
mykrobe_species = {}
mykrobe_species["Mycobacterium_tuberculosis"]="tb"
mykrobe_species["Staphylococcus_aureus"]="staph"
    
genes = ''

include:
    pipeline_path + "rules/annotation/resistance/format_xlsx.rules"

include:
    pipeline_path + "rules/annotation/resistance/rgi.rules"
    
if species!="Staphylococcus_aureus" and species!="Mycobacterium_tuberculosis":
    rule all:
        input:
            expand("samples/{sample}/resistance/rgi.xlsx", sample=read_naming.keys())
    
if species=="Staphylococcus_aureus":
    include:
        pipeline_path + "rules/annotation/resistance/mykrobe.rules"
    rule all:
        input:
            expand("samples/{sample}/resistance/rgi.xlsx", sample=read_naming.keys()),
            expand("samples/{sample}/resistance/mykrobe.xlsx", sample=read_naming.keys()),
        

if species=="Mycobacterium_tuberculosis":
    include:
        pipeline_path + "rules/annotation/resistance/m_tuberculosis.rules"
    include:
        pipeline_path + "rules/annotation/resistance/mykrobe.rules"
    rule all:
        input:
            expand("samples/{sample}/resistance/mykrobe.xlsx", sample=read_naming.keys()),
            expand("samples/{sample}/resistance/m_tuberculosis_resistance_genes_4_db_mutations/summary.xlsx", sample=read_naming.keys()),



